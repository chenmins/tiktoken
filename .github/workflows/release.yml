name: Release Go Binary
on:
  push:
    # run only against tags
    tags:
      - '*'

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.20.2'
          cache: true
      # More assembly might be required: Docker logins, GPG, etc. It all depends
      # on your needs.
      - uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro':
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro'
          # distribution:
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: List contents of dist directory
        run: find dist -type f

      - name: Extract repository name
        id: repo_name
        run: echo "::set-output name=repository::$(echo ${{ github.repository }} | cut -d'/' -f2)"

      - name: Extract tag name
        id: extract_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Copy binary to root directory
        run: cp dist/${{ steps.repo_name.outputs.repository }}_linux_amd64_v1/${{ steps.repo_name.outputs.repository }} .

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:${{ steps.extract_tag.outputs.tag }}
            ${{ github.repository }}:latest